{"ast":null,"code":"import _defineProperty from \"/home/jyeok/temp/swpphw2/swppfall2019/hw2/skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const LOGIN_FAILED = account => {\n  return {\n    type: actionTypes.LOGIN_FAILED,\n    account: account,\n    behavior: () => alert(\"Email or Password is wrong\")\n  };\n};\nexport const LOGIN_SUCCESS = account => {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n    account: account,\n    behavior: () => axios.put('/api/user/1', _objectSpread({}, account, {\n      logged_in: true\n    }))\n  };\n};\nexport const LOGIN = accountInformation => {\n  return dispatch => {\n    return axios.get('/api/user/1').then(res => {\n      const validAccount = res.data;\n      if (validAccount.email !== accountInformation.email || validAccount.password !== accountInformation.password) dispatch(LOGIN_FAILED(accountInformation));else {\n        dispatch(LOGIN_SUCCESS(validAccount));\n      }\n    });\n  };\n};\nexport const GET_LOGIN_INFO = () => {\n  return dispatch => {\n    return axios.get('/api/user/1').then(res => {\n      if (res.data.logged_in) dispatch(GET_LOGIN_INFO_(res.data));\n    });\n  };\n};\nexport const GET_LOGIN_INFO_ = res => {\n  return {\n    type: actionTypes.GET_LOGIN_INFO,\n    account: res\n  };\n};\nexport const LOGOUT = accountInformation => {\n  return dispatch => {\n    return axios.put('/api/user/1', _objectSpread({}, accountInformation, {\n      logged_in: false\n    }));\n  };\n};","map":{"version":3,"sources":["/home/jyeok/temp/swpphw2/swppfall2019/hw2/skeleton/src/store/action/actionCreator.js"],"names":["actionTypes","axios","LOGIN_FAILED","account","type","behavior","alert","LOGIN_SUCCESS","put","logged_in","LOGIN","accountInformation","dispatch","get","then","res","validAccount","data","email","password","GET_LOGIN_INFO","GET_LOGIN_INFO_","LOGOUT"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAIC,OAAD,IAAa;AACrC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACE,YADf;AAEHC,IAAAA,OAAO,EAAEA,OAFN;AAGHE,IAAAA,QAAQ,EAAE,MAAMC,KAAK,CAAC,4BAAD;AAHlB,GAAP;AAKH,CANM;AAQP,OAAO,MAAMC,aAAa,GAAIJ,OAAD,IAAa;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACO,aADf;AAEHJ,IAAAA,OAAO,EAAEA,OAFN;AAGHE,IAAAA,QAAQ,EAAE,MAAMJ,KAAK,CAACO,GAAN,CAAU,aAAV,oBAA6BL,OAA7B;AAAsCM,MAAAA,SAAS,EAAG;AAAlD;AAHb,GAAP;AAKH,CANM;AAQP,OAAO,MAAMC,KAAK,GAAIC,kBAAD,IAAwB;AACzC,SAAQC,QAAD,IAAc;AACjB,WAAOX,KAAK,CAACY,GAAN,CAAU,aAAV,EACNC,IADM,CAEFC,GAAD,IAAS;AACL,YAAMC,YAAY,GAAGD,GAAG,CAACE,IAAzB;AACA,UAAGD,YAAY,CAACE,KAAb,KAAuBP,kBAAkB,CAACO,KAA1C,IAAmDF,YAAY,CAACG,QAAb,KAA0BR,kBAAkB,CAACQ,QAAnG,EACIP,QAAQ,CAACV,YAAY,CAACS,kBAAD,CAAb,CAAR,CADJ,KAEK;AACDC,QAAAA,QAAQ,CAACL,aAAa,CAACS,YAAD,CAAd,CAAR;AACH;AACJ,KATE,CAAP;AAWH,GAZD;AAaH,CAdM;AAgBP,OAAO,MAAMI,cAAc,GAAG,MAAM;AAChC,SAAOR,QAAQ,IAAI;AACf,WAAOX,KAAK,CAACY,GAAN,CAAU,aAAV,EACNC,IADM,CACDC,GAAG,IAAI;AACT,UAAGA,GAAG,CAACE,IAAJ,CAASR,SAAZ,EAAuBG,QAAQ,CAACS,eAAe,CAACN,GAAG,CAACE,IAAL,CAAhB,CAAR;AAC1B,KAHM,CAAP;AAIH,GALD;AAMH,CAPM;AASP,OAAO,MAAMI,eAAe,GAAIN,GAAD,IAAS;AACpC,SAAO;AACHX,IAAAA,IAAI,EAAEJ,WAAW,CAACoB,cADf;AAEHjB,IAAAA,OAAO,EAAEY;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMO,MAAM,GAAIX,kBAAD,IAAwB;AAC1C,SAAQC,QAAD,IAAc;AACjB,WAAOX,KAAK,CAACO,GAAN,CAAU,aAAV,oBAA6BG,kBAA7B;AAAiDF,MAAAA,SAAS,EAAE;AAA5D,OAAP;AACH,GAFD;AAGH,CAJM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const LOGIN_FAILED = (account) => {\n    return {\n        type: actionTypes.LOGIN_FAILED,\n        account: account,\n        behavior: () => alert(\"Email or Password is wrong\")\n    };\n}\n\nexport const LOGIN_SUCCESS = (account) => {\n    return {\n        type: actionTypes.LOGIN_SUCCESS,\n        account: account,\n        behavior: () => axios.put('/api/user/1', {...account, logged_in : true}),\n    }\n}\n\nexport const LOGIN = (accountInformation) => {\n    return (dispatch) => {\n        return axios.get('/api/user/1')\n        .then(\n            (res) => {\n                const validAccount = res.data;\n                if(validAccount.email !== accountInformation.email || validAccount.password !== accountInformation.password) \n                    dispatch(LOGIN_FAILED(accountInformation));\n                else {\n                    dispatch(LOGIN_SUCCESS(validAccount));\n                }\n            }\n        );\n    }\n}\n\nexport const GET_LOGIN_INFO = () => {\n    return dispatch => {\n        return axios.get('/api/user/1')\n        .then(res => {\n            if(res.data.logged_in) dispatch(GET_LOGIN_INFO_(res.data));\n        })\n    }\n}\n\nexport const GET_LOGIN_INFO_ = (res) => {\n    return {\n        type: actionTypes.GET_LOGIN_INFO,\n        account: res\n    }\n}\n\nexport const LOGOUT = (accountInformation) => {\n    return (dispatch) => {\n        return axios.put('/api/user/1', {...accountInformation, logged_in: false});\n    }\n}"]},"metadata":{},"sourceType":"module"}