{"ast":null,"code":"import _defineProperty from \"/home/jyeok/temp/swpphw2/swppfall2019/hw2/skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const GET_LOGIN_INFO = () => {\n  return dispatch => {\n    return axios.get('/api/user/1').then(res => {\n      dispatch(GET_LOGIN_INFO_(res.data));\n    });\n  };\n};\nexport const GET_LOGIN_INFO_ = userInfo => {\n  return {\n    type: actionTypes.GET_LOGIN_INFO,\n    account: userInfo,\n    redirectUrl: userInfo.logged_in ? '/articles' : '/login'\n  };\n};\nexport const LOGIN = (email, password) => {\n  return dispatch => {\n    return axios.get('/api/user/1').then(res => {\n      console.log(res.data);\n      if (res.data.email === email && res.data.password === password) dispatch(LOGIN_SUCCESS(res.data));else {\n        alert(\"Email or password is wrong\");\n        dispatch(LOGIN_FAILED());\n      }\n    });\n  };\n};\nexport const LOGIN_FAILED = () => {\n  return {\n    type: actionTypes.LOGIN_FAILED\n  };\n};\nexport const LOGIN_SUCCESS = account => {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n    account: _objectSpread({}, account, {\n      logged_in: true\n    }),\n    redirectUrl: '/articles'\n  };\n};","map":{"version":3,"sources":["/home/jyeok/temp/swpphw2/swppfall2019/hw2/skeleton/src/store/action/actionCreator.js"],"names":["actionTypes","axios","GET_LOGIN_INFO","dispatch","get","then","res","GET_LOGIN_INFO_","data","userInfo","type","account","redirectUrl","logged_in","LOGIN","email","password","console","log","LOGIN_SUCCESS","alert","LOGIN_FAILED"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,SAAOC,QAAQ,IAAI;AACf,WAAOF,KAAK,CAACG,GAAN,CAAU,aAAV,EACNC,IADM,CACDC,GAAG,IAAI;AACTH,MAAAA,QAAQ,CAACI,eAAe,CAACD,GAAG,CAACE,IAAL,CAAhB,CAAR;AACH,KAHM,CAAP;AAIH,GALD;AAMH,CAPM;AASP,OAAO,MAAMD,eAAe,GAAIE,QAAD,IAAc;AACzC,SAAO;AACHC,IAAAA,IAAI,EAAEV,WAAW,CAACE,cADf;AAEHS,IAAAA,OAAO,EAAEF,QAFN;AAGHG,IAAAA,WAAW,EAAEH,QAAQ,CAACI,SAAT,GAAqB,WAArB,GAAkC;AAH5C,GAAP;AAKH,CANM;AAQP,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtC,SAAOb,QAAQ,IAAI;AACf,WAAOF,KAAK,CAACG,GAAN,CAAU,aAAV,EACNC,IADM,CACDC,GAAG,IAAI;AACTW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAG,CAACE,IAAhB;AACA,UAAGF,GAAG,CAACE,IAAJ,CAASO,KAAT,KAAmBA,KAAnB,IAA4BT,GAAG,CAACE,IAAJ,CAASQ,QAAT,KAAsBA,QAArD,EACIb,QAAQ,CAACgB,aAAa,CAACb,GAAG,CAACE,IAAL,CAAd,CAAR,CADJ,KAEK;AACDY,QAAAA,KAAK,CAAC,4BAAD,CAAL;AACAjB,QAAAA,QAAQ,CAACkB,YAAY,EAAb,CAAR;AACH;AACJ,KATM,CAAP;AAUH,GAXD;AAYH,CAbM;AAeP,OAAO,MAAMA,YAAY,GAAG,MAAM;AAC9B,SAAO;AACHX,IAAAA,IAAI,EAAEV,WAAW,CAACqB;AADf,GAAP;AAGH,CAJM;AAKP,OAAO,MAAMF,aAAa,GAAIR,OAAD,IAAa;AACtC,SAAO;AACHD,IAAAA,IAAI,EAAEV,WAAW,CAACmB,aADf;AAEHR,IAAAA,OAAO,oBAAMA,OAAN;AAAeE,MAAAA,SAAS,EAAE;AAA1B,MAFJ;AAGHD,IAAAA,WAAW,EAAE;AAHV,GAAP;AAKH,CANM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const GET_LOGIN_INFO = () => {\n    return dispatch => {\n        return axios.get('/api/user/1')\n        .then(res => {\n            dispatch(GET_LOGIN_INFO_(res.data));\n        })\n    }\n}\n\nexport const GET_LOGIN_INFO_ = (userInfo) => {\n    return {\n        type: actionTypes.GET_LOGIN_INFO,\n        account: userInfo,\n        redirectUrl: userInfo.logged_in ? '/articles': '/login',\n    }\n}\n\nexport const LOGIN = (email, password) => {\n    return dispatch => {\n        return axios.get('/api/user/1')\n        .then(res => {\n            console.log(res.data);\n            if(res.data.email === email && res.data.password === password)\n                dispatch(LOGIN_SUCCESS(res.data));\n            else {\n                alert(\"Email or password is wrong\");\n                dispatch(LOGIN_FAILED());\n            }\n        });\n    }\n}\n\nexport const LOGIN_FAILED = () => {\n    return {\n        type: actionTypes.LOGIN_FAILED\n    }\n}\nexport const LOGIN_SUCCESS = (account) => {\n    return {\n        type: actionTypes.LOGIN_SUCCESS,\n        account: {...account, logged_in: true},\n        redirectUrl: '/articles'\n    }\n}"]},"metadata":{},"sourceType":"module"}