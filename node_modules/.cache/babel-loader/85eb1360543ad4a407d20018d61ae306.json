{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const LOGIN_FAILED = accountInformation => {\n  return {\n    type: actionTypes.LOGIN_FAILED,\n    email: accountInformation.email,\n    password: accountInformation.password,\n    behavior: () => alert(\"Email or Password is wrong\")\n  };\n};\nexport const LOGIN_SUCCESS = accountInformation => {};\nexport const LOGIN = accountInformation => {\n  return dispatch => {\n    return axios.get('/api/user/1').then(res => {\n      const validAccount = res.data;\n      if (validAccount.email !== accountInformation.email || validAccount.password !== accountInformation.password) dispatch(LOGIN_FAILED(accountInformation));else {\n        console.log('validAccount is', validAccount);\n        dispatch(LOGIN_SUCCESS(validAccount));\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/jyeok/temp/swpphw2/swppfall2019/hw2/skeleton/src/store/action/actionCreator.js"],"names":["actionTypes","axios","LOGIN_FAILED","accountInformation","type","email","password","behavior","alert","LOGIN_SUCCESS","LOGIN","dispatch","get","then","res","validAccount","data","console","log"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAIC,kBAAD,IAAwB;AAChD,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACE,YADf;AAEHG,IAAAA,KAAK,EAAEF,kBAAkB,CAACE,KAFvB;AAGHC,IAAAA,QAAQ,EAAEH,kBAAkB,CAACG,QAH1B;AAIHC,IAAAA,QAAQ,EAAE,MAAMC,KAAK,CAAC,4BAAD;AAJlB,GAAP;AAMH,CAPM;AASP,OAAO,MAAMC,aAAa,GAAIN,kBAAD,IAAwB,CAEpD,CAFM;AAIP,OAAO,MAAMO,KAAK,GAAIP,kBAAD,IAAwB;AACzC,SAAQQ,QAAD,IAAc;AACjB,WAAOV,KAAK,CAACW,GAAN,CAAU,aAAV,EACNC,IADM,CAEFC,GAAD,IAAS;AACL,YAAMC,YAAY,GAAGD,GAAG,CAACE,IAAzB;AACA,UAAGD,YAAY,CAACV,KAAb,KAAuBF,kBAAkB,CAACE,KAA1C,IAAmDU,YAAY,CAACT,QAAb,KAA0BH,kBAAkB,CAACG,QAAnG,EAA6GK,QAAQ,CAACT,YAAY,CAACC,kBAAD,CAAb,CAAR,CAA7G,KACK;AACDc,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,YAA/B;AACAJ,QAAAA,QAAQ,CAACF,aAAa,CAACM,YAAD,CAAd,CAAR;AACH;AACJ,KATE,CAAP;AAWH,GAZD;AAaH,CAdM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const LOGIN_FAILED = (accountInformation) => {\n    return {\n        type: actionTypes.LOGIN_FAILED,\n        email: accountInformation.email,\n        password: accountInformation.password,\n        behavior: () => alert(\"Email or Password is wrong\")\n    };\n}\n\nexport const LOGIN_SUCCESS = (accountInformation) => {\n\n}\n\nexport const LOGIN = (accountInformation) => {\n    return (dispatch) => {\n        return axios.get('/api/user/1')\n        .then(\n            (res) => {\n                const validAccount = res.data;\n                if(validAccount.email !== accountInformation.email || validAccount.password !== accountInformation.password) dispatch(LOGIN_FAILED(accountInformation));\n                else {\n                    console.log('validAccount is', validAccount );\n                    dispatch(LOGIN_SUCCESS(validAccount));\n                }\n            }\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}