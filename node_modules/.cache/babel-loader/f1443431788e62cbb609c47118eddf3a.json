{"ast":null,"code":"import _defineProperty from \"/home/jyeok/temp/swpphw2/swppfall2019/hw2/skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/jyeok/temp/swpphw2/swppfall2019/hw2/skeleton/src/store/reducer/blog.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from '../action/actionTypes';\nimport React from 'react';\nimport Axios from 'axios';\nconst initialState = {\n  account: {\n    email: '',\n    id: -1,\n    logged_in: false,\n    name: '',\n    password: ''\n  },\n  redirectUrl: '',\n  currentArticle: {},\n  users: {},\n  comments: [] // articleList: []\n\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_LOGIN_INFO:\n      const userState = _objectSpread({}, state, {\n        account: action.account,\n        redirectUrl: action.redirectUrl\n      });\n\n      return userState;\n\n    case actionTypes.LOGIN_SUCCESS:\n      const loginedState = _objectSpread({}, state, {\n        account: action.account,\n        redirectUrl: action.redirectUrl\n      });\n\n      return loginedState;\n\n    case actionTypes.LOGIN_FAILED:\n      console.log(\"For debug; Login failed\", action.account);\n      break;\n\n    case actionTypes.LOGOUT:\n      const logoutedState = _objectSpread({}, state, {\n        account: action.account,\n        redirectUrl: action.redirectUrl\n      });\n\n      return logoutedState;\n\n    case actionTypes.GET_ARTICLE:\n      const articleState = _objectSpread({}, state, {\n        currentArticle: action.article\n      });\n\n      return articleState;\n\n    case actionTypes.GET_USERS:\n      let idAndKey = {};\n      action.users.forEach(el => {\n        idAndKey[el.id] = el.name;\n      });\n\n      const usersState = _objectSpread({}, state, {\n        users: idAndKey\n      });\n\n      return usersState;\n\n    case actionTypes.GET_COMMENTS:\n      let articleCommentsAuthor = action.data.map(c => {\n        return React.createElement(\"div\", {\n          key: c.id,\n          className: \"commentEntry\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"comment-author\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, state.users[c.author_id])), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"comment-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, c.content), c.author_id == state.account.id && React.createElement(\"button\", {\n          id: \"edit-comment-button\",\n          onClick: e => {\n            console.log(e);\n            let editedComment = prompt(\"Enter the comment\", c.content);\n\n            if (editedComment && editedComment !== '') {\n              Axios.patch('/api/comments/' + c.id, {\n                content: editedComment\n              });\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Edit\"), c.author_id == state.account.id && React.createElement(\"button\", {\n          id: \"delete-comment-button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Delete\"));\n      });\n      return _objectSpread({}, state, {\n        comments: articleCommentsAuthor\n      });\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/jyeok/temp/swpphw2/swppfall2019/hw2/skeleton/src/store/reducer/blog.js"],"names":["actionTypes","React","Axios","initialState","account","email","id","logged_in","name","password","redirectUrl","currentArticle","users","comments","reducer","state","action","type","GET_LOGIN_INFO","userState","LOGIN_SUCCESS","loginedState","LOGIN_FAILED","console","log","LOGOUT","logoutedState","GET_ARTICLE","articleState","article","GET_USERS","idAndKey","forEach","el","usersState","GET_COMMENTS","articleCommentsAuthor","data","map","c","author_id","content","e","editedComment","prompt","patch"],"mappings":"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","sourcesContent":["import * as actionTypes from '../action/actionTypes';\nimport React from 'react';\nimport Axios from 'axios';\n\nconst initialState = {\n    account: {\n        email: '',\n        id: -1,\n        logged_in: false,\n        name: '',\n        password: ''\n    },\n\n    redirectUrl: '',\n    currentArticle: {},\n    users: {},\n    comments: []\n    // articleList: []\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.GET_LOGIN_INFO:\n            const userState = {\n                ...state,\n                account: action.account,\n                redirectUrl: action.redirectUrl\n            };\n            return userState;\n\n        case actionTypes.LOGIN_SUCCESS:\n            const loginedState = {\n                ...state,\n                account: action.account,\n                redirectUrl: action.redirectUrl\n            };\n            return loginedState;\n\n        case actionTypes.LOGIN_FAILED:\n            console.log(\"For debug; Login failed\", action.account);\n            break;\n\n        case actionTypes.LOGOUT:\n            const logoutedState = {\n                ...state,\n                account: action.account,\n                redirectUrl: action.redirectUrl\n            };\n            return logoutedState;\n\n        case actionTypes.GET_ARTICLE:\n            const articleState = {\n                ...state,\n                currentArticle: action.article\n            };\n            return articleState;\n\n        case actionTypes.GET_USERS:\n            let idAndKey = {};\n            action.users.forEach(el => {\n                idAndKey[el.id] = el.name;                \n            })\n            const usersState = {\n                ...state,\n                users: idAndKey\n            };\n            return usersState;\n        \n        case actionTypes.GET_COMMENTS:\n            let articleCommentsAuthor = action.data.map(\n                c => {\n                    return (<div key={c.id} className='commentEntry'>\n                        <span className=\"comment-author\"><b>{state.users[c.author_id]}</b></span><br/>\n                        <span className=\"comment-content\">{c.content}</span>\n                        {c.author_id == state.account.id && <button id='edit-comment-button' onClick={\n                            (e) => {\n                                console.log(e);\n                                let editedComment = prompt(\"Enter the comment\", c.content)\n                                if(editedComment && editedComment !== '') {\n                                    Axios.patch(\n                                        '/api/comments/' + c.id,\n                                        {\n                                            content: editedComment\n                                        }\n                                    );\n                                    \n                                }\n                            }\n                        }>Edit</button>}\n                        {c.author_id == state.account.id && <button id='delete-comment-button'>Delete</button>}\n                        </div>);\n                }\n            )\n            return {\n                ...state,\n                comments: articleCommentsAuthor\n            };\n\n        default:\n            break;\n    }\n    return state;\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}