{"ast":null,"code":"import _defineProperty from \"/home/jyeok/temp/swpphw2/swppfall2019/hw2/skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from '../action/actionTypes';\nconst initialState = {\n  account: {\n    email: '',\n    id: -1,\n    logged_in: false,\n    name: '',\n    password: ''\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_USER:\n      {}\n      break;\n\n    case actionTypes.LOGIN:\n      const newAccount = {\n        email: action.email,\n        valid: true\n      };\n      return _objectSpread({}, state, {\n        account: newAccount\n      });\n\n    default:\n      break;\n  }\n\n  console.log(state);\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/jyeok/temp/swpphw2/swppfall2019/hw2/skeleton/src/store/reducer/blog.js"],"names":["actionTypes","initialState","account","email","id","logged_in","name","password","reducer","state","action","type","GET_USER","LOGIN","newAccount","valid","console","log"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,uBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,EAAE,EAAE,CAAC,CAFA;AAGLC,IAAAA,SAAS,EAAE,KAHN;AAILC,IAAAA,IAAI,EAAE,EAJD;AAKLC,IAAAA,QAAQ,EAAE;AALL;AADQ,CAArB;;AAUA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,WAAW,CAACY,QAAjB;AAA2B,OAE1B;AACD;;AAEA,SAAKZ,WAAW,CAACa,KAAjB;AACI,YAAMC,UAAU,GAAG;AACfX,QAAAA,KAAK,EAAEO,MAAM,CAACP,KADC;AAEfY,QAAAA,KAAK,EAAE;AAFQ,OAAnB;AAIA,+BAAWN,KAAX;AAAkBP,QAAAA,OAAO,EAAEY;AAA3B;;AAEJ;AACI;AAdR;;AAgBAE,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,SAAOA,KAAP;AACH,CAnBD;;AAqBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../action/actionTypes';\n\nconst initialState = {\n    account: {\n        email: '',\n        id: -1,\n        logged_in: false,\n        name: '',\n        password: ''\n    },\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.GET_USER: {\n            \n        }\n        break;\n\n        case actionTypes.LOGIN:\n            const newAccount = {\n                email: action.email,\n                valid: true\n            };\n            return {...state, account: newAccount};\n        \n        default:\n            break;\n    }\n    console.log(state);\n    return state;\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}