{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const LOGIN_FAILED = accountInformation => {\n  return {\n    type: actionTypes.LOGIN,\n    email: accountInformation.email,\n    password: accountInformation.password\n  };\n};\nexport const LOGIN_SUCCESS = accountInformation => {};\nexport const LOGIN = accountInformation => {\n  return dispatch => {\n    return axios.get('/api/user/1').then(res => {\n      const validAccount = res.data;\n\n      if (validAccount.email !== accountInformation.email || validAccount.password !== accountInformation.password) {\n        alert(\"Email or Password is wrong\");\n      } else {\n        console.log('validAccount is', validAccount);\n        return {\n          type: actionTypes.LOGIN,\n          account: validAccoint\n        };\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/jyeok/temp/swpphw2/swppfall2019/hw2/skeleton/src/store/action/actionCreator.js"],"names":["actionTypes","axios","LOGIN_FAILED","accountInformation","type","LOGIN","email","password","LOGIN_SUCCESS","dispatch","get","then","res","validAccount","data","alert","console","log","account","validAccoint"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAIC,kBAAD,IAAwB;AAChD,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,KADf;AAEHC,IAAAA,KAAK,EAAEH,kBAAkB,CAACG,KAFvB;AAGHC,IAAAA,QAAQ,EAAEJ,kBAAkB,CAACI;AAH1B,GAAP;AAKH,CANM;AAQP,OAAO,MAAMC,aAAa,GAAIL,kBAAD,IAAwB,CAEpD,CAFM;AAIP,OAAO,MAAME,KAAK,GAAIF,kBAAD,IAAwB;AACzC,SAAQM,QAAD,IAAc;AACjB,WAAOR,KAAK,CAACS,GAAN,CAAU,aAAV,EACNC,IADM,CAEFC,GAAD,IAAS;AACL,YAAMC,YAAY,GAAGD,GAAG,CAACE,IAAzB;;AACA,UAAGD,YAAY,CAACP,KAAb,KAAuBH,kBAAkB,CAACG,KAA1C,IAAmDO,YAAY,CAACN,QAAb,KAA0BJ,kBAAkB,CAACI,QAAnG,EAA6G;AACzGQ,QAAAA,KAAK,CAAC,4BAAD,CAAL;AACH,OAFD,MAIK;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,YAA/B;AACA,eAAO;AACHT,UAAAA,IAAI,EAAEJ,WAAW,CAACK,KADf;AAEHa,UAAAA,OAAO,EAAEC;AAFN,SAAP;AAIH;AACJ,KAfE,CAAP;AAiBH,GAlBD;AAmBH,CApBM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const LOGIN_FAILED = (accountInformation) => {\n    return {\n        type: actionTypes.LOGIN,\n        email: accountInformation.email,\n        password: accountInformation.password\n    };\n}\n\nexport const LOGIN_SUCCESS = (accountInformation) => {\n\n}\n\nexport const LOGIN = (accountInformation) => {\n    return (dispatch) => {\n        return axios.get('/api/user/1')\n        .then(\n            (res) => {\n                const validAccount = res.data;\n                if(validAccount.email !== accountInformation.email || validAccount.password !== accountInformation.password) {\n                    alert(\"Email or Password is wrong\");\n                }\n\n                else {\n                    console.log('validAccount is', validAccount );\n                    return {\n                        type: actionTypes.LOGIN,\n                        account: validAccoint\n                    }\n                }\n            }\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}