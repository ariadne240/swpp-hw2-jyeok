{"ast":null,"code":"import _defineProperty from \"/home/jyeok/temp/swpphw2/swppfall2019/hw2/skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const GET_LOGIN_INFO = () => {\n  return dispatch => {\n    return axios.get('/api/user/1').then(res => {\n      dispatch(GET_LOGIN_INFO_(res.data));\n    });\n  };\n};\nexport const GET_LOGIN_INFO_ = userInfo => {\n  return {\n    type: actionTypes.GET_LOGIN_INFO,\n    account: userInfo,\n    redirectUrl: userInfo.logged_in ? '/articles' : '/login'\n  };\n};\nexport const LOGIN = (email, password) => {\n  return dispatch => {\n    return axios.get('/api/user/1').then(res => {\n      if (res.data.email === email && res.data.password === password) {\n        const loginedUser = _objectSpread({}, res.data, {\n          logged_in: true\n        });\n\n        axios.put('/api/user/1', loginedUser).then(dispatch(LOGIN_SUCCESS(loginedUser)));\n      } else {\n        alert(\"Email or password is wrong\");\n        dispatch(LOGIN_FAILED());\n      }\n    });\n  };\n};\nexport const LOGIN_FAILED = () => {\n  return {\n    type: actionTypes.LOGIN_FAILED\n  };\n};\nexport const LOGIN_SUCCESS = loginedUser => {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n    account: loginedUser,\n    redirectUrl: '/articles'\n  };\n};\nexport const LOGOUT = account => {\n  return dispatch => {\n    const newAccountState = _objectSpread({}, account, {\n      logged_in: false\n    });\n\n    axios.put('/api/user/1', newAccountState).then(dispatch(LOGOUT_(newAccountState)));\n  };\n};\nexport const LOGOUT_ = account => {\n  return {\n    type: actionTypes.LOGOUT,\n    account: account,\n    redirectUrl: '/login'\n  };\n};\nexport const GET_ARTICLE = id => {\n  return dispatch => {\n    axios.get('/articles/' + id).then(res => {\n      dispatch(GET_ARTICLE_(res));\n    });\n  };\n};\nexport const GET_ARTICLE_ = res => {\n  const articleInformation = {\n    title: res.data.title,\n    content: res.data.content,\n    author_id: res.data.author_id,\n    author: ''\n  };\n  return {\n    type: actionTypes.GET_ARTICLE,\n    article: articleInformation\n  };\n};\nexport const GET_USERS = () => {\n  return dispatch => {\n    axios.get('/api/user').then(res => dispatch(GET_USERS_(res.data)));\n  };\n};\nexport const GET_USERS_ = data => {\n  return {\n    type: actionTypes.GET_USERS,\n    users: data\n  };\n};\nexport const GET_COMMENTS = (articleId, userId, userList) => {\n  return dispatch => {\n    axios.get('/api/comments').then(res => {\n      dispatch(GET_COMMENTS_(articleId, userId, res.data, userList));\n    });\n  };\n};\nexport const GET_COMMENTS_ = (articleId, userId, comments) => {\n  let articleComments = comments.filter(c => c.article_id == articleId);\n  return {\n    type: actionTypes.GET_COMMENTS,\n    data: articleComments\n  };\n};","map":{"version":3,"sources":["/home/jyeok/temp/swpphw2/swppfall2019/hw2/skeleton/src/store/action/actionCreator.js"],"names":["actionTypes","axios","GET_LOGIN_INFO","dispatch","get","then","res","GET_LOGIN_INFO_","data","userInfo","type","account","redirectUrl","logged_in","LOGIN","email","password","loginedUser","put","LOGIN_SUCCESS","alert","LOGIN_FAILED","LOGOUT","newAccountState","LOGOUT_","GET_ARTICLE","id","GET_ARTICLE_","articleInformation","title","content","author_id","author","article","GET_USERS","GET_USERS_","users","GET_COMMENTS","articleId","userId","userList","GET_COMMENTS_","comments","articleComments","filter","c","article_id"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const GET_LOGIN_INFO = () => {\n    return dispatch => {\n        return axios.get('/api/user/1')\n        .then(res => {\n            dispatch(GET_LOGIN_INFO_(res.data));\n        })\n    }\n}\n\nexport const GET_LOGIN_INFO_ = (userInfo) => {\n    return {\n        type: actionTypes.GET_LOGIN_INFO,\n        account: userInfo,\n        redirectUrl: userInfo.logged_in ? '/articles': '/login',\n    }\n}\n\nexport const LOGIN = (email, password) => {\n    return dispatch => {\n        return axios.get('/api/user/1')\n        .then(res => {\n            if(res.data.email === email && res.data.password === password) {\n                const loginedUser = {\n                    ...res.data, logged_in: true\n                };\n\n                axios.put('/api/user/1', loginedUser)\n                .then(dispatch(LOGIN_SUCCESS(loginedUser)));\n            }\n            else {\n                alert(\"Email or password is wrong\");\n                dispatch(LOGIN_FAILED());\n            }\n        });\n    }\n}\n\nexport const LOGIN_FAILED = () => {\n    return {\n        type: actionTypes.LOGIN_FAILED\n    }\n}\nexport const LOGIN_SUCCESS = (loginedUser) => {\n    return {\n        type: actionTypes.LOGIN_SUCCESS,\n        account: loginedUser,\n        redirectUrl: '/articles'\n    }\n}\n\nexport const LOGOUT = (account) => {\n    return dispatch => {\n        const newAccountState = {\n            ...account,\n            logged_in : false\n        }\n        axios.put('/api/user/1', newAccountState)\n        .then(\n            dispatch(LOGOUT_(newAccountState))\n        );\n    }\n}\n\nexport const LOGOUT_ = (account) => {\n    return {\n        type: actionTypes.LOGOUT,\n        account: account,\n        redirectUrl: '/login'\n    }\n}\n\nexport const GET_ARTICLE = (id) => {\n    return dispatch => {\n        axios.get('/articles/' + id)\n        .then(res => {\n            dispatch(GET_ARTICLE_(res));\n        })\n    }\n}\n\nexport const GET_ARTICLE_ = (res) => {\n    const articleInformation = {\n        title: res.data.title,\n        content: res.data.content,\n        author_id: res.data.author_id,\n        author: ''\n    }\n\n    return {\n        type: actionTypes.GET_ARTICLE,\n        article: articleInformation\n    }\n}\n\nexport const GET_USERS = () => {\n    return dispatch => {\n        axios.get('/api/user')\n        .then(\n            (res) => dispatch(GET_USERS_(res.data))\n        );\n    }\n}\n\nexport const GET_USERS_ = (data) => {\n    return {\n        type: actionTypes.GET_USERS,\n        users: data\n    }\n}\n\nexport const GET_COMMENTS = (articleId, userId, userList) => {\n    return dispatch => {\n        axios.get('/api/comments')\n        .then((res) => {\n            dispatch(GET_COMMENTS_(articleId, userId, res.data, userList))\n        })\n    }\n}\n\nexport const GET_COMMENTS_ = (articleId, userId, comments) => {\n    let articleComments = comments.filter(c => c.article_id == articleId);\n    return {\n        type: actionTypes.GET_COMMENTS,\n        data: articleComments\n    }\n}"]},"metadata":{},"sourceType":"module"}